// pages/api/auth/route.ts

import { NextApiRequest, NextApiResponse } from 'next';
import { getSession } from 'next-auth/react';

type HandlerFunction = (req: NextApiRequest, res: NextApiResponse) => Promise<void | NextApiResponse<any>>;

type RouteHandlers = {
  [key: string]: HandlerFunction | undefined;
};

const handler: RouteHandlers = {
  GET: async (req, res) => {
    try {
      const session = await getSession({ req });

      if (!session) {
        return res.status(401).json({ message: 'You must be logged in.' });
      }

      return res.status(200).json({ message: 'You are authenticated', session });
    } catch (error) {
      console.error('Error occurred:', error);
      return res.status(500).json({ message: 'Internal Server Error' });
    }
  },

  POST: async (req, res) => {
    // Handle POST request
  },

  // Add handlers for other HTTP methods as needed
};

export default handler;
