{
  "contractName": "RequestManager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_analytics",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "submitRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_analytics\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"submitRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RequestManager.sol\":\"RequestManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/RequestManager.sol\":{\"keccak256\":\"0xdfa552269cf64f537b6011df0526fcde20d92ca0c37d43dcf8c789a2f56241dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://084ac63d843254ce70b491cc539af3fcbe01379283c9bf8c021071eb3faf1b6d\",\"dweb:/ipfs/QmTVqRaggQpk9s3DoTXCwsHPBqN6GxZnDRApczGfpVJrze\"]},\"project:/interfaces/IUncertaintyAnalytics.sol\":{\"keccak256\":\"0x2280fc59708133031ae0bbb9768b8998cd926c209708b7a13ec2bd078b38df92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eef9ffd933c3cc3bed6d083df8403ab8935ee89d529545cfa3d92cb655dc03f\",\"dweb:/ipfs/QmXaj238HQobXRaKPm2z9t7YtgZQxcVRm8r1NejVF3oVhE\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561000f575f80fd5b5060405161024038038061024083398101604081905261002e916100f3565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820181905260248201527f416e616c797469637320616464726573732063616e6e6f74206265207a65726f60448201526064015b60405180910390fd5b5f816001600160a01b03163b116100e25760405162461bcd60e51b815260206004820152601c60248201527f416e616c7974696373206d757374206265206120636f6e7472616374000000006044820152606401610080565b6001600160a01b0316608052610120565b5f60208284031215610103575f80fd5b81516001600160a01b0381168114610119575f80fd5b9392505050565b6080516101096101375f395f603a01526101095ff3fe608060405260043610601b575f3560e01c8063599606c114601f575b5f80fd5b60256037565b60405190815260200160405180910390f35b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663599606c1346040518263ffffffff1660e01b815260040160206040518083038185885af11580156095573d5f803e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019060b8919060bd565b905090565b5f6020828403121560cc575f80fd5b505191905056fea2646970667358221220a4eab37f6257ee04bb0795ed1d596fe0dff34f31aced02fd01e81061bf9c77b264736f6c63430008140033",
  "deployedBytecode": "0x608060405260043610601b575f3560e01c8063599606c114601f575b5f80fd5b60256037565b60405190815260200160405180910390f35b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663599606c1346040518263ffffffff1660e01b815260040160206040518083038185885af11580156095573d5f803e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019060b8919060bd565b905090565b5f6020828403121560cc575f80fd5b505191905056fea2646970667358221220a4eab37f6257ee04bb0795ed1d596fe0dff34f31aced02fd01e81061bf9c77b264736f6c63430008140033",
  "immutableReferences": {
    "3464": [
      {
        "length": 32,
        "start": 58
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1024:41",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:41",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:41",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:41",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:41",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:41",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:41"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:41"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:41"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:41"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:41",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:41"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:41"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:41",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:41"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:41"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:41",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:41",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:41",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:41",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:41"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:41"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:41"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:41",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:41",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:41"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:41",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:41"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:41"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:41"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:41"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:41"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:41",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:41"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:41"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:41",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:41",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:41",
                "type": ""
              }
            ],
            "src": "14:290:41"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "483:182:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:41",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:21:41"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "493:21:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "534:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "545:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "530:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "530:18:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "550:2:41",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:30:41"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "573:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "584:2:41",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "569:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:18:41"
                      },
                      {
                        "hexValue": "416e616c797469637320616464726573732063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "589:34:41",
                        "type": "",
                        "value": "Analytics address cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:62:41"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:62:41"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "633:26:41",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "645:9:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "656:2:41",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "641:3:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:18:41"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "633:4:41"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3a719c5614e5488a8bada682045a26f7a43f3aee4c440bcf42e4857a63b2da0b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "460:9:41",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "474:4:41",
                "type": ""
              }
            ],
            "src": "309:356:41"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "844:178:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "861:9:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "872:2:41",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "854:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "854:21:41"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "854:21:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "895:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "906:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "891:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "891:18:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "911:2:41",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "884:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "884:30:41"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "884:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "934:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "945:2:41",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "930:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "930:18:41"
                      },
                      {
                        "hexValue": "416e616c7974696373206d757374206265206120636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "950:30:41",
                        "type": "",
                        "value": "Analytics must be a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "923:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "923:58:41"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "923:58:41"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "990:26:41",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1002:9:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1013:2:41",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "998:3:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "998:18:41"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "990:4:41"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_400a8b3ace3c571e2d2cfe57dd914e8c392952d6904370f8de7cdbccf7a11d9f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "821:9:41",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "835:4:41",
                "type": ""
              }
            ],
            "src": "670:352:41"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_3a719c5614e5488a8bada682045a26f7a43f3aee4c440bcf42e4857a63b2da0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Analytics address cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_400a8b3ace3c571e2d2cfe57dd914e8c392952d6904370f8de7cdbccf7a11d9f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Analytics must be a contract\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 41,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:382:41",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:41",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:41",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:41",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:41",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:41"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:41"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:41"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:41"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:41"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:41",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:41",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:41",
                "type": ""
              }
            ],
            "src": "14:177:41"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "277:103:41",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "323:16:41",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "332:1:41",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "335:1:41",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "325:6:41"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "325:12:41"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "325:12:41"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "298:7:41"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "307:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "294:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "294:23:41"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:2:41",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "290:3:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "290:32:41"
                  },
                  "nodeType": "YulIf",
                  "src": "287:52:41"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "348:26:41",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "364:9:41"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "358:5:41"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:16:41"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "348:6:41"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "243:9:41",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "254:7:41",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "266:6:41",
                "type": ""
              }
            ],
            "src": "196:184:41"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
      "id": 41,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "107:523:19:-:0;;;197:294;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;247:24:19;;239:69;;;;-1:-1:-1;;;239:69:19;;511:2:41;239:69:19;;;493:21:41;;;530:18;;;523:30;589:34;569:18;;;562:62;641:18;;239:69:19;;;;;;;;;351:1;326:10;-1:-1:-1;;;;;326:22:19;;:26;318:67;;;;-1:-1:-1;;;318:67:19;;872:2:41;318:67:19;;;854:21:41;911:2;891:18;;;884:30;950;930:18;;;923:58;998:18;;318:67:19;670:352:41;318:67:19;-1:-1:-1;;;;;439:45:19;;;107:523;;14:290:41;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:41;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:41:o;670:352::-;107:523:19;;;;;;;;;;;;",
  "deployedSourceMap": "107:523:19:-:0;;;;;;;;;;;;;;;;;;;;;501:127;;;:::i;:::-;;;160:25:41;;;148:2;133:18;501:127:19;;;;;;;;552:7;578:9;-1:-1:-1;;;;;578:23:19;;609:9;578:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;571:50;;501:127;:::o;196:184:41:-;266:6;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;-1:-1:-1;358:16:41;;196:184;-1:-1:-1;196:184:41:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"../interfaces/IUncertaintyAnalytics.sol\";\n\ncontract RequestManager {\n    IUncertaintyAnalytics private immutable analytics;\n    \n    constructor(address _analytics) {\n        require(_analytics != address(0), \"Analytics address cannot be zero\");\n        require(_analytics.code.length > 0, \"Analytics must be a contract\");\n        \n        // Initialize the contract\n        analytics = IUncertaintyAnalytics(_analytics);\n    }\n    \n    function submitRequest() external payable returns (uint256) {\n        return analytics.submitRequest{value: msg.value}();\n    }\n}",
  "sourcePath": "C:\\Users\\Bonsu\\Documents\\CLEANER PRODUCTION\\renewalclimateproject\\ClimateProjectFull\\contracts\\RequestManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/RequestManager.sol",
    "exportedSymbols": {
      "IUncertaintyAnalytics": [
        14675
      ],
      "RequestManager": [
        3509
      ]
    },
    "id": 3510,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3460,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:19"
      },
      {
        "absolutePath": "project:/interfaces/IUncertaintyAnalytics.sol",
        "file": "../interfaces/IUncertaintyAnalytics.sol",
        "id": 3461,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3510,
        "sourceUnit": 14676,
        "src": "56:49:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "RequestManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3509,
        "linearizedBaseContracts": [
          3509
        ],
        "name": "RequestManager",
        "nameLocation": "116:14:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3464,
            "mutability": "immutable",
            "name": "analytics",
            "nameLocation": "177:9:19",
            "nodeType": "VariableDeclaration",
            "scope": 3509,
            "src": "137:49:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUncertaintyAnalytics_$14675",
              "typeString": "contract IUncertaintyAnalytics"
            },
            "typeName": {
              "id": 3463,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3462,
                "name": "IUncertaintyAnalytics",
                "nameLocations": [
                  "137:21:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14675,
                "src": "137:21:19"
              },
              "referencedDeclaration": 14675,
              "src": "137:21:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUncertaintyAnalytics_$14675",
                "typeString": "contract IUncertaintyAnalytics"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3494,
              "nodeType": "Block",
              "src": "229:262:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3470,
                          "name": "_analytics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3466,
                          "src": "247:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "269:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "261:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3471,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "261:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "261:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "247:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e616c797469637320616464726573732063616e6e6f74206265207a65726f",
                        "id": 3476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "273:34:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a719c5614e5488a8bada682045a26f7a43f3aee4c440bcf42e4857a63b2da0b",
                          "typeString": "literal_string \"Analytics address cannot be zero\""
                        },
                        "value": "Analytics address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a719c5614e5488a8bada682045a26f7a43f3aee4c440bcf42e4857a63b2da0b",
                          "typeString": "literal_string \"Analytics address cannot be zero\""
                        }
                      ],
                      "id": 3469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "239:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "239:69:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3478,
                  "nodeType": "ExpressionStatement",
                  "src": "239:69:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 3480,
                              "name": "_analytics",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3466,
                              "src": "326:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 3481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "337:4:19",
                            "memberName": "code",
                            "nodeType": "MemberAccess",
                            "src": "326:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 3482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "342:6:19",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "326:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "351:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "326:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e616c7974696373206d757374206265206120636f6e7472616374",
                        "id": 3485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "354:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_400a8b3ace3c571e2d2cfe57dd914e8c392952d6904370f8de7cdbccf7a11d9f",
                          "typeString": "literal_string \"Analytics must be a contract\""
                        },
                        "value": "Analytics must be a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_400a8b3ace3c571e2d2cfe57dd914e8c392952d6904370f8de7cdbccf7a11d9f",
                          "typeString": "literal_string \"Analytics must be a contract\""
                        }
                      ],
                      "id": 3479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "318:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "318:67:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3487,
                  "nodeType": "ExpressionStatement",
                  "src": "318:67:19"
                },
                {
                  "expression": {
                    "id": 3492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3488,
                      "name": "analytics",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3464,
                      "src": "439:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUncertaintyAnalytics_$14675",
                        "typeString": "contract IUncertaintyAnalytics"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3490,
                          "name": "_analytics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3466,
                          "src": "473:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3489,
                        "name": "IUncertaintyAnalytics",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14675,
                        "src": "451:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUncertaintyAnalytics_$14675_$",
                          "typeString": "type(contract IUncertaintyAnalytics)"
                        }
                      },
                      "id": 3491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "451:33:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUncertaintyAnalytics_$14675",
                        "typeString": "contract IUncertaintyAnalytics"
                      }
                    },
                    "src": "439:45:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUncertaintyAnalytics_$14675",
                      "typeString": "contract IUncertaintyAnalytics"
                    }
                  },
                  "id": 3493,
                  "nodeType": "ExpressionStatement",
                  "src": "439:45:19"
                }
              ]
            },
            "id": 3495,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3466,
                  "mutability": "mutable",
                  "name": "_analytics",
                  "nameLocation": "217:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3495,
                  "src": "209:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "209:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "208:20:19"
            },
            "returnParameters": {
              "id": 3468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:0:19"
            },
            "scope": 3509,
            "src": "197:294:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3507,
              "nodeType": "Block",
              "src": "561:67:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3500,
                          "name": "analytics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3464,
                          "src": "578:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUncertaintyAnalytics_$14675",
                            "typeString": "contract IUncertaintyAnalytics"
                          }
                        },
                        "id": 3501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "588:13:19",
                        "memberName": "submitRequest",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14649,
                        "src": "578:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                          "typeString": "function () payable external returns (uint256)"
                        }
                      },
                      "id": 3504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 3502,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "609:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "613:5:19",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "609:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "578:41:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                        "typeString": "function () payable external returns (uint256)"
                      }
                    },
                    "id": 3505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3499,
                  "id": 3506,
                  "nodeType": "Return",
                  "src": "571:50:19"
                }
              ]
            },
            "functionSelector": "599606c1",
            "id": 3508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitRequest",
            "nameLocation": "510:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:2:19"
            },
            "returnParameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3508,
                  "src": "552:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "551:9:19"
            },
            "scope": 3509,
            "src": "501:127:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3510,
        "src": "107:523:19",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "32:598:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x68c0808F0b143b0Db6a7e69882A6b20f64B14247",
      "transactionHash": "0x3a81b93792b286d556c52d455cf5d110faaa8d9e6bb32eb0598e68267fabd673"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-02-21T06:43:13.833Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}